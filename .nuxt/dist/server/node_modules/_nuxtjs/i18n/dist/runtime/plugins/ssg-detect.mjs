import { unref } from "vue";
import { runtimeDetectBrowserLanguage, detectBrowserLanguage } from "../internal.mjs";
import { defineNuxtPlugin } from "../../../../../nuxt/dist/app/nuxt.mjs";
const ssg_detect_IpHCGcQQ_IR5Rl99qyukWoMA9fJGfuTYyoksTzy81cs = defineNuxtPlugin({
  name: "i18n:plugin:ssg-detect",
  dependsOn: ["i18n:plugin", "i18n:plugin:route-locale-detect"],
  enforce: "post",
  setup(nuxt) {
    if (nuxt.$i18n.strategy !== "no_prefix" || !runtimeDetectBrowserLanguage(nuxt.$config.public.i18n))
      return;
    const nuxtApp = nuxt;
    const localeCookie = nuxtApp.$i18n.getLocaleCookie();
    nuxt.hook("app:mounted", async () => {
      const detected = detectBrowserLanguage(
        nuxtApp.$router.currentRoute.value,
        localeCookie,
        localeCookie || unref(nuxtApp.$i18n.defaultLocale)
      );
      await nuxtApp.$i18n.setLocale(detected.locale);
      nuxtApp._vueI18n.__firstAccess = false;
    });
  }
});
export {
  ssg_detect_IpHCGcQQ_IR5Rl99qyukWoMA9fJGfuTYyoksTzy81cs as default
};
//# sourceMappingURL=ssg-detect.mjs.map
