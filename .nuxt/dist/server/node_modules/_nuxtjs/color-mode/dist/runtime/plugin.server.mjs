import { ref, reactive } from "vue";
import { preference } from "../../../../../_virtual/virtual_nuxt__home_alkaline1024_Documents_portfolio-chanawat_.nuxt_color-mode-options.mjs";
import { defineNuxtPlugin } from "../../../../nuxt/dist/app/nuxt.mjs";
import { useHead } from "../../../../nuxt/dist/head/runtime/composables/v3.mjs";
import { useState } from "../../../../nuxt/dist/app/composables/state.mjs";
import { useRouter } from "../../../../nuxt/dist/app/composables/router.mjs";
const plugin_server_9Ca9_HhnjAGwBWpwAydRauMHxWoxTDY60BrArRnXN_A = defineNuxtPlugin((nuxtApp) => {
  var _a;
  const colorMode = ((_a = nuxtApp.ssrContext) == null ? void 0 : _a.islandContext) ? ref({}) : useState("color-mode", () => reactive({
    preference,
    value: preference,
    unknown: true,
    forced: false
  })).value;
  const htmlAttrs = {};
  {
    useHead({ htmlAttrs });
  }
  useRouter().afterEach((to) => {
    const forcedColorMode = to.meta.colorMode;
    if (forcedColorMode && forcedColorMode !== "system") {
      colorMode.value = htmlAttrs["data-color-mode-forced"] = forcedColorMode;
      colorMode.forced = true;
    } else if (forcedColorMode === "system") {
      console.warn("You cannot force the colorMode to system at the page level.");
    }
  });
  nuxtApp.provide("colorMode", colorMode);
});
export {
  plugin_server_9Ca9_HhnjAGwBWpwAydRauMHxWoxTDY60BrArRnXN_A as default
};
//# sourceMappingURL=plugin.server.mjs.map
