{"file":"route-locale-detect.mjs","mappings":";;;;;;;AAOgC,MAAA,kEACxB,iBAAA;AAAA,EACN,MAAA;AAAA,EACA,YAAY,aAAM;AAAA,EACV,MAAA,MAAA;;AAEA,UAAA,UAAA;AACN,UAAM,uBAA6C,QAAA;AACnD,UAAA,6CAAqC;AACnC,mBAAe,kBAAiB,IAAA;AAC5B,UAAA,wBAAgC,IAAA,eAAA,EAAA,GAAA,MAAA,QAAA,MAAA,MAAA,GAAA,QAAA,MAAA,gBAAA,CAAA;AAC1B,UAAA,QAAA,wBAA6B;AAC/B,gBAAA,SAAA,YAA0C,QAAA;AAC1C,cAAA,kBAAY,wBAA2B,MAAc,QAAA,SAAA,OAAmB,cAAG,GAAA,CAAA,QAAA,CAAA;AAC3E,cAAA,QAAQ,IAAM,gBAAA,IAAA,CAAmB,MAAQ,QAAA,MAAA,mBAAA,CAAA,CAAA,CAAA;AACjD,cAAA,QAAA,MAAA,mBAAA,QAAA;AAAA,MACA;AACA,YAAc,WAAA,MAAA,QAAA,eAAA,MAAA,iBAAA,UAAA,QAAA,SAAA,aAAA,CAAA;AACD,UAAA,UAAA;AACb,mBAAA,MAAA,QAAA,MAAA,MAAA;AAAA,MACA;AACF,aAAA;AAAA,IACA;AACA,IAAA,CAAI,QAAW,SAAA,IAAAA,aAAA,MAAA,kBAAA,aAAA,KAAA,CAAA,GAAA,MAAA,QAAA,UAAA;AAKb,UAAA,mDAAqB,OAAA;UAA6BC,SAAAC;AAC5C,YAAA,UAAA,CAAAD,SAAAC,UAAA,IAAAF,aAAA,MAAA,QAA6B,eAAA,MAAA,kBAAA,EAAA,CAAA,CAAA,GAAAC,UAAA,MAAAA,SAAAC,WAAA,GAAAD;AACjC,YAAA,gBAAqB,CAAAA,SAAMC,UAAc,IAAAF,aAA4B,MAAA,QAAA;AAAA,QACvE,MAAA,eAAA,EAAA,IAAA,MAAA,QAAA,aAAA,eAAA,EAAA,EAAA,GAAA,IAAA;AAAA,MACA,CAAA,GAAAC,gBAAiBA,SAAgBC,WAAA,GAAAD;AAEjC,cAAa,SAAA,gBAAA;AACf,aAAC,CAAAA,SAAAC,UAAA,IAAAF,aAAA,MAAA,QAAA,eAAA,MAAA,SAAA,EAAA,SAAA,cAAA,QAAA,OAAA,IAAA,CAAA,CAAA,GAAAC,UAAA,MAAAA,SAAAC,WAAA,GAAAD;AAAA,IACD,CAAA;AACF,uBAAA,mBAAA,wBAAA,EAAA,QAAA,KAAA,CAAA;AAAA,EACF;;","names":["__executeAsync","__temp","__restore"],"sources":["../../../../../../../../../node_modules/@nuxtjs/i18n/dist/runtime/plugins/route-locale-detect.js"],"sourcesContent":["import { unref } from \"vue\";\nimport { hasPages } from \"#build/i18n.options.mjs\";\nimport { addRouteMiddleware, defineNuxtPlugin, defineNuxtRouteMiddleware } from \"#imports\";\nimport { createLogger } from \"#nuxt-i18n/logger\";\nimport { makeFallbackLocaleCodes } from \"../messages.js\";\nimport { createLocaleFromRouteGetter } from \"../routing/utils.js\";\nimport { detectLocale, detectRedirect, loadAndSetLocale, navigate } from \"../utils.js\";\nexport default defineNuxtPlugin({\n  name: \"i18n:plugin:route-locale-detect\",\n  dependsOn: [\"i18n:plugin\"],\n  async setup(nuxt) {\n    const logger = /* @__PURE__ */ createLogger(\"plugin:route-locale-detect\");\n    const nuxtApp = nuxt;\n    const currentRoute = nuxtApp.$router.currentRoute;\n    const getRouteLocale = createLocaleFromRouteGetter();\n    async function handleRouteDetect(to) {\n      let detected = detectLocale(to, getRouteLocale(to), unref(nuxtApp.$i18n.locale), nuxtApp.$i18n.getLocaleCookie());\n      if (nuxtApp._vueI18n.__firstAccess) {\n        nuxtApp._vueI18n.__setLocale(detected);\n        const fallbackLocales = makeFallbackLocaleCodes(unref(nuxtApp._vueI18n.global.fallbackLocale), [detected]);\n        await Promise.all(fallbackLocales.map((x) => nuxtApp.$i18n.loadLocaleMessages(x)));\n        await nuxtApp.$i18n.loadLocaleMessages(detected);\n      }\n      const modified = await nuxtApp.runWithContext(() => loadAndSetLocale(detected, nuxtApp._vueI18n.__firstAccess));\n      if (modified) {\n        detected = unref(nuxtApp.$i18n.locale);\n      }\n      return detected;\n    }\n    await handleRouteDetect(currentRoute.value);\n    if (!hasPages) {\n      return;\n    }\n    const localeChangeMiddleware = defineNuxtRouteMiddleware(async (to, from) => {\n      __DEBUG__ && logger.log(\"locale-changing middleware\", to, from);\n      const locale = await nuxtApp.runWithContext(() => handleRouteDetect(to));\n      const redirectPath = await nuxtApp.runWithContext(\n        () => detectRedirect({ to, from, locale, routeLocale: getRouteLocale(to) }, true)\n      );\n      nuxtApp._vueI18n.__firstAccess = false;\n      __DEBUG__ && logger.log(\"redirectPath on locale-changing middleware\", redirectPath);\n      return await nuxtApp.runWithContext(() => navigate({ nuxtApp, redirectPath, locale, route: to }));\n    });\n    addRouteMiddleware(\"locale-changing\", localeChangeMiddleware, { global: true });\n  }\n});\n"],"version":3}