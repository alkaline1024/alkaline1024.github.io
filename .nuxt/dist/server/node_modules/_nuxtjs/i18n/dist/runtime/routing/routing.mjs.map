{"version":3,"file":"routing.mjs","sources":["../../../../../../../../../node_modules/@nuxtjs/i18n/dist/runtime/routing/routing.js"],"sourcesContent":["import { hasProtocol, parsePath, parseQuery, withTrailingSlash, withoutTrailingSlash } from \"ufo\";\nimport { DEFAULT_DYNAMIC_PARAMS_KEY } from \"#build/i18n.options.mjs\";\nimport { isNavigationFailure } from \"vue-router\";\nimport { unref } from \"#imports\";\nimport { getI18nTarget } from \"../compatibility.js\";\nimport { getLocaleRouteName, getRouteName } from \"./utils.js\";\nimport { extendPrefixable, extendSwitchLocalePathIntercepter } from \"../utils.js\";\nexport function getRouteBaseName(common, route) {\n  const _route = unref(route);\n  if (_route == null || !_route.name) {\n    return;\n  }\n  const name = getRouteName(_route.name);\n  return name.split(common.runtimeConfig.public.i18n.routesNameSeparator)[0];\n}\nexport function localePath(common, route, locale) {\n  if (typeof route === \"string\" && hasProtocol(route, { acceptRelative: true })) {\n    return route;\n  }\n  const localizedRoute = resolveRoute(common, route, locale);\n  return localizedRoute == null ? \"\" : localizedRoute.redirectedFrom?.fullPath || localizedRoute.fullPath;\n}\nexport function localeRoute(common, route, locale) {\n  return resolveRoute(common, route, locale) ?? void 0;\n}\nfunction normalizeRawLocation(route) {\n  if (typeof route !== \"string\") {\n    return Object.assign({}, route);\n  }\n  if (route[0] === \"/\") {\n    const { pathname: path, search, hash } = parsePath(route);\n    return { path, query: parseQuery(search), hash };\n  }\n  return { name: route };\n}\nconst isRouteLocationPathRaw = (val) => !!val.path && !val.name;\nfunction resolveRouteObject(common, route, locale) {\n  const runtimeI18n = common.runtimeConfig.public.i18n;\n  if (isRouteLocationPathRaw(route)) {\n    const resolved = resolve(common, route, locale);\n    const resolvedName = getRouteBaseName(common, resolved);\n    if (resolvedName) {\n      resolved.name = getLocaleRouteName(resolvedName, locale, runtimeI18n);\n      return resolved;\n    }\n    const prefixable = extendPrefixable(common.runtimeConfig);\n    if (prefixable({ ...runtimeI18n, currentLocale: locale })) {\n      route.path = \"/\" + locale + route.path;\n    }\n    route.path = (runtimeI18n.trailingSlash ? withTrailingSlash : withoutTrailingSlash)(route.path, true);\n    return route;\n  }\n  route.name ||= getRouteBaseName(common, common.router.currentRoute.value);\n  const localizedName = getLocaleRouteName(route.name, locale, runtimeI18n);\n  if (common.router.hasRoute(localizedName)) {\n    route.name = localizedName;\n  }\n  return route;\n}\nexport function resolveRoute(common, route, locale) {\n  try {\n    const _locale = locale || unref(getI18nTarget(common.i18n).locale);\n    const normalized = normalizeRawLocation(route);\n    const resolved = common.router.resolve(resolveRouteObject(common, normalized, _locale));\n    if (resolved.name) {\n      return resolved;\n    }\n    return common.router.resolve(route);\n  } catch (e) {\n    if (isNavigationFailure(\n      e,\n      1\n      /* No match */\n    )) {\n      return null;\n    }\n  }\n}\nfunction getLocalizableMetaFromDynamicParams(common, route) {\n  if (common.runtimeConfig.public.i18n.experimental.switchLocalePathLinkSSR) {\n    return unref(common.metaState.value);\n  }\n  const meta = route.meta || {};\n  return unref(meta)?.[DEFAULT_DYNAMIC_PARAMS_KEY] || {};\n}\nexport function switchLocalePath(common, locale, _route) {\n  const route = _route ?? common.router.currentRoute.value;\n  const name = getRouteBaseName(common, route);\n  if (!name) {\n    return \"\";\n  }\n  const resolvedParams = getLocalizableMetaFromDynamicParams(common, route)[locale];\n  const routeCopy = {\n    name,\n    params: Object.assign({}, route.params, resolvedParams),\n    fullPath: route.fullPath,\n    query: route.query,\n    hash: route.hash,\n    path: route.path,\n    meta: route.meta\n    // matched: route.matched,\n    // redirectedFrom: route.redirectedFrom\n  };\n  const path = localePath(common, routeCopy, locale);\n  const switchLocalePathIntercepter = extendSwitchLocalePathIntercepter(common.runtimeConfig);\n  return switchLocalePathIntercepter(path, locale);\n}\nfunction resolve(common, route, locale) {\n  if (common.runtimeConfig.public.i18n.strategy === \"no_prefix\") {\n    return route;\n  }\n  if (common.runtimeConfig.public.i18n.strategy !== \"prefix\") {\n    return common.router.resolve(route);\n  }\n  const restPath = route.path.slice(1);\n  const targetPath = route.path[0] + locale + (restPath && \"/\" + restPath);\n  const _route = common.router.options.routes.find((r) => r.path === targetPath);\n  if (_route == null) {\n    return route;\n  }\n  return common.router.resolve(Object.assign({}, route, _route, { path: targetPath }));\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}